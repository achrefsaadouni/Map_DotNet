
@{
    ViewBag.Title = "Rh";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .row {
        margin-left: 350px;
    }

    .row1 {
        margin-left: 550px;
    }
</style>
<!-- CandidateByState-->
<a href="#" id="downloadPdf">Download Report Page as PDF</a>
<br /><br />
<div id="reportPage">
    <!--CountRhByAvailability-->
    <div Style="font-family: Corbel; font-size: medium ;text-align:center " class="row1">
        <div style="width:50%;height:50%">
            <canvas id="myChart1" style="padding: 0;margin: auto;display: block; "> </canvas>
        </div>
    </div>
    <!--RhRankedBySalary-->
    <div Style="font-family: Corbel; font-size: medium ;text-align:center " class="row">
        <div style="width:75%;height:75%">
            <canvas id="myChart" style="padding: 0;margin: auto;display: block; "> </canvas>
        </div>
    </div>
    <!--RhAvaialableRankedByNote-->
    <div Style="font-family: Corbel; font-size: medium ;text-align:center " class="row">
        <div style="width:75%;height:75%">
            <canvas id="myChart3" style="padding: 0;margin: auto;display: block; "> </canvas>
        </div>
    </div>
</div>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.6.0/Chart.min.js" type="text/javascript"></script>
    <script src="https://code.jquery.com/jquery-1.11.3.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.3.4/jspdf.min.js"></script>

<!-- generate pdf-->
<script>
    $('#downloadPdf').click(function(event) {
        // get size of report page
        var reportPageHeight = $('#reportPage').innerHeight();
        var reportPageWidth = $('#reportPage').innerWidth();

        // create a new canvas object that we will populate with all other canvas objects
        var pdfCanvas = $('<canvas />').attr({
            id: "canvaspdf",
            width: reportPageWidth+700,
            height: reportPageHeight+1200
        });

        // keep track canvas position
        var pdfctx = $(pdfCanvas)[0].getContext('2d');
        var pdfctxX = 0;
        var pdfctxY = 0;
        var buffer = 100;

        // for each chart.js chart
        $("canvas").each(function(index) {
            // get the chart height/width
            var canvasHeight = $(this).innerHeight();
            var canvasWidth = $(this).innerWidth();

            // draw the chart into the new canvas
            pdfctx.drawImage($(this)[0], pdfctxX+200, pdfctxY+40, canvasWidth+100, canvasHeight+100);
            pdfctxX += canvasWidth + buffer+200;
            //pdfctxY += canvasHeight + buffer+100;

            // our report page is in a grid pattern so replicate that in the new canvas
            if (index % 2 === 1) {
                pdfctxX = 0;
                pdfctxY += canvasHeight + buffer+200;
            }
        });

        // create new pdf and add our new canvas as an image
        var pdf = new jsPDF('l', 'pt', [reportPageWidth, reportPageHeight]);
        pdf.addImage($(pdfCanvas)[0], 'PNG', 0, 0);

        // download the pdf
        pdf.save('filename.pdf');
    });
</script>
    <!--CountRhByAvailability-->
    <script>
        var data2 = @Html.Raw(@ViewBag.result1);
        var data3 = data2.map(function (e) {
            return e[0];
        });
        var data4 = data2.map(function (e) {
            return e[1];
        });
        new Chart(document.getElementById("myChart1"), {
            type: 'pie',
            data: {
                labels: data4,
                datasets: [{
                    label: "",
                    backgroundColor: ["#3e95cd", "#8e5ea2","#3cba9f","#e8c3b9","#c45850"],
                    data: data3
                }]
            },
            options: {
                title: {
                    display: true,
                    text: 'Nb Rh By Availability'
                }
            }
        });

    </script>
    <!--RhRankedBySalary-->
    <script>
        var data5 = @Html.Raw(@ViewBag.result2);
        var data6 = data5.map(function (e) {
            return e[0];
        });
        var data7 = data5.map(function (e) {
            return e[1];
        });

        $.ajax({

            success: function () {
                var aData = [0,1,2,3,4,5];
                var aLabels = data6;
                var aset=data7;

                var color = Chart.helpers.color;
                var dataT = {
                    labels: aLabels,
                    datasets: [
                        {
                            label: "",
                            data: aset,
                            fill: false,
                            backgroundColor: ["rgba(54, 162, 235, 0.2)", "rgba(255, 99, 132, 0.2)", "rgba(255, 159, 64, 0.2)", "rgba(255, 205, 86, 0.2)", "rgba(75, 192, 192, 0.2)", "rgba(153, 102, 255, 0.2)", "rgba(201, 203, 207, 0.2)"],

                            borderColor: ["rgb(54, 162, 235)", "rgb(255, 99, 132)", "rgb(255, 159, 64)", "rgb(255, 205, 86)", "rgb(75, 192, 192)", "rgb(153, 102, 255)", "rgb(201, 203, 207)"],
                            borderWidth: 1
                        }
                    ]
                };
                var ctx = $("#myChart").get(0).getContext("2d");
                var myNewChart = new Chart(ctx, {

                    type: 'bar',
                    data: dataT,
                    options: {

                        responsive: true,
                        title: { display: true, text: 'Rh Ranked By Salary' },
                        legend: { position: 'none' },
                        scales: {
                            xAxes: [{ gridLines: { display: false }, display: true, scaleLabel: { display: true, labelString: 'Rh Name ' } }],
                            yAxes: [{ gridLines: { display: false }, display: true, scaleLabel: { display: true, labelString: ' Salary (Dt)' }, ticks: { stepSize: 800, beginAtZero: true } }]
                        },
                    }
                });
            }
        });
    </script>
    <!--RhAvaialableRankedByNote-->

    <script>
        var data8 = @Html.Raw(@ViewBag.result3);
        var data9 = data8.map(function (e) {
            return e[0];
        });
        var data10 = data8.map(function (e) {
            return e[1];
        });

        $.ajax({

            success: function () {
                var aData = [0,1,2,3,4,5];
                var aLabels = data9;
                var aset=data10;

                var color = Chart.helpers.color;
                var dataT = {
                    labels: aLabels,
                    datasets: [
                        {
                            label: "",
                            data: aset,
                            fill: false,
                            backgroundColor: ["rgba(54, 162, 235, 0.2)", "rgba(255, 99, 132, 0.2)", "rgba(255, 159, 64, 0.2)", "rgba(255, 205, 86, 0.2)", "rgba(75, 192, 192, 0.2)", "rgba(153, 102, 255, 0.2)", "rgba(201, 203, 207, 0.2)"],

                            borderColor: ["rgb(54, 162, 235)", "rgb(255, 99, 132)", "rgb(255, 159, 64)", "rgb(255, 205, 86)", "rgb(75, 192, 192)", "rgb(153, 102, 255)", "rgb(201, 203, 207)"],
                            borderWidth: 1
                        }
                    ]
                };
                var ctx = $("#myChart3").get(0).getContext("2d");
                var myNewChart = new Chart(ctx, {

                    type: 'bar',
                    data: dataT,
                    options: {

                        responsive: true,
                        title: { display: true, text: 'Rh Available Ranked By Note' },
                        legend: { position: 'none' },
                        scales: {
                            xAxes: [{ gridLines: { display: false }, display: true, scaleLabel: { display: true, labelString: 'Rh Name ' } }],
                            yAxes: [{ gridLines: { display: false }, display: true, scaleLabel: { display: true, labelString: ' Note' }, ticks: { stepSize: 2, beginAtZero: true } }]
                        },
                    }
                });
            }
        });
    </script>



