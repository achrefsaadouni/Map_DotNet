@model Web.Models.ProjectViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>ProjectViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)

        <div class="form-group">
            @Html.LabelFor(model => model.address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.endDate, htmlAttributes: new {  @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.endDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.endDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.picture, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.picture, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.picture, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.projectName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.projectName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.projectName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.startDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.startDate, new { htmlAttributes = new { @class = "form-control datepicker" } })
                @Html.ValidationMessageFor(model => model.startDate, "", new { @class = "text-danger" })
            </div>
        </div>
        
 
        <div class="form-group">
            @Html.LabelFor(model => model.projectType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    string someVariable = null;
                    if ( Model.projectType.Equals("newProject"))
                    {
                        someVariable = "New project";
                    }
                    else if (Model.projectType.Equals("projectInProgress"))
                    {
                        someVariable = "Project in progress";
                    }
                    else if (Model.projectType.Equals("completedProject"))
                    {
                        someVariable = "Completed project";
                    }

                }     
                @Html.DropDownList("TypeProject", (IEnumerable<SelectListItem>) ViewBag.TypeProject, someVariable, new {Class = "form-control"})
                @Html.ValidationMessageFor(model => model.projectType, "", new {@class = "text-danger"})
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.clientId, "Client", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownList("CLIENT", null, new {Class = "form-control"})
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
